{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/modules/main/components/main.component.html","webpack:///./src/modules/main/components/main.component.ts","webpack:///./src/modules/main/main.module.ts","webpack:///./src/modules/material/material.module.ts","webpack:///./src/modules/news/components/NewsList/newsList.component.html","webpack:///./src/modules/news/components/NewsList/newsList.component.ts","webpack:///./src/modules/news/components/newsItem/newsItem.component.html","webpack:///./src/modules/news/components/newsItem/newsItem.component.ts","webpack:///./src/modules/news/news.module.ts","webpack:///./src/modules/news/services/news.api.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { MainModule } from './modules/main/main.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(MainModule)\r\n  .catch(err => console.log(err));\r\n","module.exports = \"<news-list></news-list>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './main.component.html',\r\n})\r\nexport class MainComponent {\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { MainComponent } from './components/main.component';\r\nimport {NewsModule} from '../news/news.module';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MainComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    NewsModule,\r\n    BrowserAnimationsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [MainComponent]\r\n})\r\nexport class MainModule { }\r\n","import {MatButtonModule, MatCardModule} from '@angular/material';\r\nimport {NgModule} from '@angular/core';\r\n\r\n@NgModule({\r\n  imports: [MatButtonModule, MatCardModule],\r\n  exports: [MatButtonModule, MatCardModule],\r\n})\r\nexport class MaterialModule { }\r\n","module.exports = \"<span *ngFor=\\\"let newsItem of newsItems\\\">\\r\\n  <news-item [newsItem]=\\\"newsItem\\\"></news-item>\\r\\n</span>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {NewsApiService} from '../../services/news.api.service';\r\nimport {NewsRecord} from '../../schemas/news.record.schema';\r\n\r\nenum NewsChannel {\r\n  GreenCard = \"green card\",\r\n  OPT = \"OPT\",\r\n  H1B = \"H1B\",\r\n  USCIS = \"USCIS\",\r\n}\r\n\r\n@Component({\r\n  selector: 'news-list',\r\n  templateUrl: './newsList.component.html',\r\n  providers: [NewsApiService]\r\n})\r\nexport class NewsListComponent{\r\n  channel: NewsChannel = NewsChannel.GreenCard;\r\n  newsItems: NewsRecord[];\r\n  constructor(private newsApiService: NewsApiService){\r\n    this.fetchNews(NewsChannel.GreenCard);\r\n  }\r\n\r\n  fetchNews(channel: NewsChannel){\r\n    this.channel = channel;\r\n    this.newsApiService.searchByTerm(this.channel).subscribe(result=>{\r\n      this.newsItems = result;\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<mat-card>\\r\\n  <a [href]=\\\"newsItem.url\\\">\\r\\n    {{newsItem.title}}\\r\\n  </a>\\r\\n</mat-card>\\r\\n\"","import {Component, Input} from '@angular/core';\r\n\r\n@Component({selector: 'news-item', templateUrl: './newsItem.component.html'})\r\nexport class NewsItemComponent{\r\n  @Input() newsItem;\r\n\r\n}\r\n","import {CommonModule} from \"@angular/common\";\r\nimport { NgModule } from '@angular/core';\r\nimport {NewsItemComponent} from './components/newsItem/newsItem.component';\r\nimport {NewsListComponent} from './components/NewsList/newsList.component';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {MaterialModule} from '../material/material.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NewsListComponent,\r\n    NewsItemComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    MaterialModule,\r\n  ],\r\n  exports: [NewsListComponent],\r\n  providers: []\r\n})\r\nexport class NewsModule { }\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {NewsRecord} from '../schemas/news.record.schema';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NewsApiService {\r\n\r\n  private url: string = '/api/searchNews?q=';\r\n  constructor(private http: HttpClient) { }\r\n\r\n  searchByTerm(term: string):Observable<NewsRecord[]>{\r\n    return this.http.get<NewsRecord[]>(this.url+term);\r\n  }\r\n}\r\n"],"sourceRoot":""}